git常用指令

git config --global user.name "xxx"
#指定git仓库用户

git confit --global user.email "xxx@xxx.com"
#指定git仓库用户的邮箱

git init
#git仓库初始化，当前路径

gid add filename
#把文件传至暂存区

git commit -m "xxx"
#把文件提交至仓库，后接修改描述

git status
#查看当前仓库的状态，是否存在相关修改

git diff filename
#查看暂存区的修改与版本仓库的不同处

git log
#查看文件的修改日志

git log --pretty=oneline
#查看文件的修改日期，按行格式显示

git reset --hard commit id
#让文件回到commit id的指定版本

git reflog
#在命令行输入的指令历史记录

git checkout -- filename
#把文件恢复到最近一次commit或add的状态。

git rm filename
#删除仓库中的文件

git remote add repository_name git@githu.com.xxx   https://github.com/knaank/clone_git
#增加一个远程仓库在github中

git remote remove repository_name
#移出远程仓库

git push -u repository_name master
#推送本地仓库到远程仓库上，-u是用第一次推送远程仓库

git push repository_name master
#推送当前提交的文件到远程仓库上

git clone  git@github.com:knaank/gitskills.git
#从远程仓库中克隆一份数据仓

git checkout -b 分支名称
#创建分支并切换分支

git checkout 分支名称
#切换分支

git branch
#查看当前分支

git merge 分支名称
#把当前分支与指定分支合并

git branch -d 分支名称
#删除指定分支

git log --graph --pretty=oneline --abbrev-commit
#显示分支的不同路线图，防止冲突

git merge --no-ff -m “XXX” 分支名称
#用普通合并，保留分支历史

git stash
#隐藏当前工作现场

git stash list
#查看工作现场表

git stash pop
#弹出保存的工作现场，并删除

git stash apply
#恢复工作现场

git stashfrop
#删除工作现场

git tag 标签名称
#打标签

git tag
#查看所有标签

git tag -a v0.1 -m "version 0.1 released" 3628164
#创建带有说明的标签，用-a指定标签名，-m指定说明文字

git tag -d 标签名称
#删除标签

git push 远程仓库名称 标签名称
#把本地的标签推送到远程仓库

git push 远程仓库名称 --tag
#推送所有标签到远程仓库

git push origin :refs/tags/<tagname>
#删除远程标签

git add -f App.class
#强制提交某文件